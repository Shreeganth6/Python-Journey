import random

points = 0
print("Welcome to Rock Paper Scissor game ")
rock = """
    _______
---'   ____)
      (_____)
      (_____)
      (____)
---.__(___)
"""

paper = """
     _______
---'    ____)____
           ______)
          _______)
         _______)
---.__________)
"""

scissor = """
    _______
---'   ____)____
          ______)
       __________)
      (____)
---.__(___)
"""
while (points > -3 and points < 3):
    choice = input("\nRock , Paper or Scissor? ")
    choice = choice.lower()
    if choice == "rock":
        print("\n" + rock)

    elif choice == "paper":
        print("\n" + paper)

    elif choice == "scissor":
        print("\n" + scissor)

    print("The computer choice is : ")
    game = [rock, paper, scissor]
    random_num = random.randint(0, 2)
    system_choice = game[random_num]
    print(system_choice)

    if (choice == "rock" and system_choice == paper):
        print("You have lost")
        points = points - 1
        print(f"you are having {points} points")

    elif (choice == "paper" and system_choice == scissor):
        print("You have lost")
        points = points - 1
        print(f"you are having {points} points")

    elif (choice == "scissor" and system_choice == rock):
        print("You have lost")
        points = points - 1
        print(f"you are having {points} points")

    # points ++

    if (choice == "rock" and system_choice == scissor):
        print("You have lost")
        points = points + 1
        print(f"you are having {points} points")

    elif (choice == "paper" and system_choice == rock):
        print("You have lost in this round")
        points = points + 1
        print(f"you are having {points} points")

    elif (choice == "scissor" and system_choice == paper):
        print("You have lost in this round")
        points = points + 1
        print(f"you are having {points} points")

    # points draw

    if (choice == "rock" and system_choice == rock):
        print("Ended up in draw for this round")
        print(f"you are having {points} points")

    elif (choice == "paper" and system_choice == paper):
        print("Ended up in draw for this round")
        print(f"you are having {points} points")

    elif (choice == "scissor" and system_choice == scissor):
        print("Ended up in draw for this round")
        print(f"you are having {points} points")

    # game results

    if points == 3:
        print("the player has won the match ")
        break

    if points == -3:
        print("The computer has won the match")
        break
# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
